@page "/LogoutTestin"
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Microsoft.IdentityModel.Tokens
@inject HttpClient Http
@inject NavigationManager NavManager

<h3 style="padding-top: 125px">LogoutTestin</h3>


@if (!userName.IsNullOrEmpty())
{
    <button @onclick="Logout" class="btn btn-primary">Logout</button>
}
else
{
    // Ha den til å ikke vises?
    <p>You are not logged in</p>
}


@code {
    private string logedout;
    private string userName;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userName = await Http.GetStringAsync("http://localhost:80/api/members/Username-info");
            Console.WriteLine($"Username from LogoutTestin: {userName}");

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
    
    private async Task Logout()
    {
        var response = await Http.GetAsync("http://localhost:80/api/members/Logout");
        if (response.IsSuccessStatusCode)
        {
            logedout = "Logout successful";
            Task.Delay(5000);
            NavManager.NavigateTo("/login");
        }
        else
        {
            logedout = "Logout failed";
        }
        Console.WriteLine(logedout);
    }
}