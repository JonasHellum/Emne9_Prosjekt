@using Microsoft.IdentityModel.Tokens
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<div style="display: flex;
            justify-content: center;
            background: linear-gradient(#404040,
                                        #323232,
                                        #292929,
                                        #252525,
                                        #1b1b1b,
                                        #1b1b1b,
                                        #1b1b1b,
                                        #1b1b1b,
                                        #252525)">
    <div style="text-align: left;
                padding-top: 10px;
                padding-bottom: 10px">
        <img style="width: 120px"
             alt=""
             src="@_icon"
             @onmouseover="MouseOn"
             @onmouseout="MouseOff"/>
    </div>
    <div style="color: white;
                text-align: center;
                font-style: oblique;
                padding-right: 85px;
                padding-left: 85px;
                padding-top: 13px">
        Developed by Nubisoftâ„¢
    </div>
    
    @if (_userName.IsNullOrEmpty())
    {

        <div style="color: white;
                text-align: right;
                padding-top: 12px">
            <NavLink href="/Login"
                     class="cool-link">
                Login
            </NavLink> /
            <NavLink href="/Register"
                     class="cool-link">
                Register
            </NavLink>
        </div>
    }
    else
    {
        <div style="color: white;
            text-align: right;
            padding-top: 12px">
            Welcome @_userName
        </div>
    }
</div>
<div class="nav-item px-3"
     style="display: flex;
            justify-content: center;
            padding-top: 8px;
            background: #000000">
    <div>
        <NavLink class="nav-link" href="">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Home
        </NavLink>
    </div>
    <div>
        <NavLink class="nav-link" href="Games">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Games
        </NavLink>
    </div>
    <div>
        <NavLink class="nav-link" href="Leaderboards">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Leaderboards
        </NavLink>
    </div>
    <div>
        <NavLink class="nav-link" href="User">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> User
        </NavLink>
    </div>
    <div>
        <NavLink class="nav-link" href="Tests">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Tests
        </NavLink>
    </div>
    
</div>

<style>
    .cool-link {
        color: white;
        text-decoration: none;
    }
    .cool-link:hover {
        color: white;
        text-shadow: 0 0 10px white;
    }
</style>

@code
{
    private string _icon = "/Assets/logo/BWLogo.png";
    private string _userName;

    private bool _isClientSide;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Perform JavaScript interop only after prerendering
            _isClientSide = true;

            try
            {
                // Retrieve the token from cookies using JSInterop
                var token = await JSRuntime.InvokeAsync<string>("getCookie", "AuthTokenCOMON");

                if (!string.IsNullOrEmpty(token))
                {
                    // Add the JWT token to the Authorization header of HttpClient
                    Http.DefaultRequestHeaders.Authorization =
                        new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
                }

                // Fetch the username from the API
                _userName = await Http.GetStringAsync("http://localhost:80/api/members/Username-info");

                // Trigger a re-render now that client-side data is available
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error during initialization: {ex.Message}");
            }
        }
    }

    private void MouseOn()
    {
        _icon = "/Assets/logo/ColorLogo.png";
    }

    private void MouseOff()
    {
        _icon = "/Assets/logo/BWLogo.png";
    }
}
